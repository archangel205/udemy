public class NumberToWords {
    public static void main(String[] args) {
        System.out.println(getDigitCount(0));
        System.out.println(getDigitCount(123));
        System.out.println(getDigitCount(-12));
        System.out.println(getDigitCount(5200));
        System.out.println(reverse(-121));
        System.out.println(reverse(1212));
        System.out.println(reverse(1234));
        System.out.println(reverse(100));
        numberToWords(123);
        numberToWords(1010);
        numberToWords(1000);
        numberToWords(-12);

    }
    public static void numberToWords (int number){
        int lastDigit = 0;
        int num = reverse(number);

        int origNumbCount = getDigitCount(number);
        int revNumbCount = getDigitCount(num);

        if(number < 0){
            System.out.println("Invalid Value");
        }
        else{
            while (num > 0) {
                lastDigit = num % 10;
                num /= 10;

                switch (lastDigit) {
                    case 0:
                        System.out.println("Zero");
                        break;
                    case 1:
                        System.out.println("One");
                        break;
                    case 2:
                        System.out.println("Two");
                        break;
                    case 3:
                        System.out.println("Three");
                        break;
                    case 4:
                        System.out.println("Four");
                        break;
                    case 5:
                        System.out.println("Five");
                        break;
                    case 6:
                        System.out.println("Six");
                        break;
                    case 7:
                        System.out.println("Seven");
                        break;
                    case 8:
                        System.out.println("Eight");
                        break;
                    case 9:
                        System.out.println("Nine");
                        break;
                }
            }
            while (origNumbCount > revNumbCount){
                System.out.println("Zero");
                origNumbCount -=revNumbCount;
            }
        }
    }

    public static int reverse(int number){
        int reverseOrder = 0;
        int lastDigit;

        if((number < 0) || number > 0){
            while(number > 0 || number < 0) {
                lastDigit = number % 10;
                reverseOrder *= 10;
                reverseOrder += lastDigit;
                number /= 10;
            }
        }
        return reverseOrder;
    }

    public static int getDigitCount(int number) {
        int digitCount = 0;
        int lastDigit;
        if (number < 0) {
            return -1;
        } else {
            if (number == 0) {
                return 1;
            }
        }
            while (number > 0) {
                lastDigit = number % 10;
                number /= 10;
                digitCount++;
            }
            return digitCount;
        }
}
