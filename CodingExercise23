 public static void numberToWords(int number){
        int num = reverse(number);
        int lastDigit;
        int origDigitCount = getDigitCount(number);
        int revDigitCount = getDigitCount(num);

        if(number < 0){
            System.out.println("Invalid Value");
        }

        lastDigit = num % 10;
        while(num !=0){

            switch (lastDigit){
                case 0:
                    System.out.println("Zero");
                    break;
                case 1:
                    System.out.println("One");
                    break;
                case 2:
                    System.out.println("Two");
                    break;
                case 3:
                    System.out.println("Three");
                    break;
                case 4:
                    System.out.println("Four");
                    break;
                case 5:
                    System.out.println("Five");
                    break;
                case 6:
                    System.out.println("Six");
                    break;
                case 7:
                    System.out.println("Seven");
                    break;
                case 8:
                    System.out.println("Eight");
                    break;
                case 9:
                    System.out.println("Nine");
                    break;
            }
            num /= 10;
            lastDigit = num % 10;
        }

        while(origDigitCount > revDigitCount){
            System.out.println("Zero");
            origDigitCount -= revDigitCount;
        }
    }

    public static int reverse(int number){
        int reverseOrder = 0;
        int negNum = number;
        if(negNum < 0){
            while(negNum != 0){
                int temNeg = negNum % 10;
                reverseOrder *= 10;
                reverseOrder += temNeg;
                negNum /= 10;
            }
        } else{
            while (number > 0) {
                int tempDigit = number % 10;
                reverseOrder *= 10;
                reverseOrder += tempDigit;
                number /= 10;
            }
        }
       return reverseOrder;
    }
    public static int getDigitCount(int number){
        int count = 0;
        if(number < 0){
            return -1;
        } else if(number == 0){
            return 1;
        }
        while(number !=0){
            count++;
           int lastDigit = number % 10;
            number /= 10;
        }
        return count;
    }
